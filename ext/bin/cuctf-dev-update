#!/bin/bash -e
ref="$1"
sha="$2"
url="$(echo "$3" | sed -e "s/{sha}/$sha/")"

case "$ref" in
	refs/heads/*)
		branch="$(echo "$ref" | sed -e 's#^refs/heads/##')"
		;;

	*)
		branch=''
		;;
esac

send() {
	if [ -z "$branch" -o "$sha" = '0000000000000000000000000000000000000000' ]; then
		return
	fi

	curl --netrc --request POST --header 'Content-Type: application/json' --data '@-' "$url" <<EOF
{
  "state": "$1",
  "target_url": "$3",
  "description": "$2",
  "context": "build/jekyll"
}
EOF
}

send 'pending' 'Building site branch from Jekyll sources'

trap "send 'error' 'Internal error while building site branch'" ERR

fail() {
	send 'failure' 'Failed to build site branch from Jekyll sources'
	exit
}

case "$sha" in
	0000000000000000000000000000000000000000)
		git -C /var/lib/git/cucyber/cuctf.io.git remote prune origin
		;;

	*)
		git -C /var/lib/git/cucyber/cuctf.io.git fetch --prune origin "$ref"
		;;
esac

if [ -z "$branch" ]; then
	exit
fi

case "$branch" in
	dev)
		target="https://dev.cuctf.io"
		;;

	*)
		target="https://${branch}.dev.cuctf.io"
		;;
esac

case "$sha" in
	0000000000000000000000000000000000000000)
		dir="/var/www/cuctf/$branch"

		rm -rf "$dir"
		;;

	*)
		dir="/var/www/cuctf/$branch"

		if [ -e "$dir" ]; then
			git -C "$dir" fetch origin "$branch" && git -C "$dir" reset --hard origin/"$branch" && git -C "$dir" clean -xdf
		else
			git clone -b "$branch" --single-branch /var/lib/git/cucyber/cuctf.io.git "$dir"
		fi

		sed -i -e "s#^url:.*\$#url: ${target}#" "$dir"/_config.yml &>/dev/null || true

		(cd "$dir" && jekyll build) || fail
		;;
esac

send 'success' 'Site branch successfully built from Jekyll sources' "${target}/"
